name: Push protocol buffer package

on:
  push:
    branches:
      - "dev"
      - "master"

jobs:
  push_pb:
    strategy:
      matrix:
        os: ["ubuntu-16.04"]
        go: ["1.14"]

    runs-on: ${{ matrix.os }}

    steps:
      ##
      # Install
      ##

      - name: Upgrade OS
        run: sudo apt update && sudo apt install -y ca-certificates openssl git tree
        shell: bash

      - name: Install Go ${{ matrix.go }} & gogo/protobuf
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
      - run: |
          export GO111MODULE=off
          go get -u github.com/gogo/protobuf/proto github.com/gogo/protobuf/protoc-gen-gofast github.com/gogo/protobuf/gogoproto

      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      ##
      # Build
      ##

      - uses: actions/checkout@v2

      - name: Define package name
        run: |
          echo ::set-env name=PB_PACKAGE_NAME::${GITHUB_REPOSITORY#*/}@${GITHUB_REF##*/}
          echo Package name: ${PB_PACKAGE_NAME}
        shell: bash
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"

      - name: Make package boiler plate
        run: |
          mkdir ${PB_PACKAGE_NAME} &&
          mkdir ${PB_PACKAGE_NAME}/proto &&
          mkdir ${PB_PACKAGE_NAME}/go &&
          mkdir ${PB_PACKAGE_NAME}/cpp

      - name: Copy proto files
        run: cp -rf **/**/*.proto ${PB_PACKAGE_NAME}/proto

      - name: Build PBs
        run: |
          export GOPATH=$(go env GOPATH)
          export GOBIN=$GOPATH/bin
          export PATH=$PATH:/usr/local/go/bin
          export PATH=$PATH:$GOPATH:$GOBIN

          cd ${PB_PACKAGE_NAME}/proto

          for file_name in *.proto; do
            # Build Golang PBs
            protoc -I=. -I=${GOPATH}/src -I=${GOPATH}/src/github.com/gogo/protobuf/protobuf\
             --gofast_out=plugins=grpc:../go "./$file_name"

            # Build C++ PBs
          done

      - run: tree ${PB_PACKAGE_NAME}

      ##
      # Push
      ##

      - name: Push ${{ env.PB_PACKAGE_NAME }} to share-proto-repo
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: ${{ env.PB_PACKAGE_NAME }}
          destination-github-username: ${{ github.repository_owner }}
          destination-repository-name: share-proto-repo
          user-email: ${{ github.actor }}
          target-branch: ${{ env.PB_PACKAGE_NAME}}
